const RIOT_RPC_URL = process.env.RIOT_RPC_URL || 'https://riot-rpc-server.adaptable.app';
const riotDeviceImages = [
  // 'https://bafkreidmkpibpkguvrnzuqgmudacxji4fl6g437wrtb74t5uliqihuhede.ipfs.nftstorage.link/',
  // 'https://bafkreibufkhlr6kaq4mhb4tpczbwtzm7jx2q7nrnwed2ndk6klrv6da54u.ipfs.nftstorage.link/',
  'https://bafybeice6wite46sx5ztubkuafmxhjmacq6iivhlvl23fokf6ql3mqwc44.ipfs.nftstorage.link/',
];
const polygonAddress = '0x6396E6523D2952c9601809f7e6D3f7d046f0b495';
const polygonABI = [
  {
    inputs: [
      { internalType: 'address', name: 'gatewayAddress', type: 'address' },
      { internalType: 'string', name: 'feePayerAddress', type: 'string' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'approved', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: '_fromTokenId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: '_toTokenId', type: 'uint256' },
    ],
    name: 'BatchMetadataUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: 'organisationId', type: 'uint256' },
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'address', name: 'deviceId', type: 'address' },
          { internalType: 'bytes32', name: 'firmwareHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceDataHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceGroupIdHash', type: 'bytes32' },
          { internalType: 'address', name: 'subscriber', type: 'address' },
          { internalType: 'bytes32', name: 'sessionSalt', type: 'bytes32' },
          { internalType: 'bool', name: 'exists', type: 'bool' },
        ],
        indexed: false,
        internalType: 'struct TheRiotProtocolPolygon.Device',
        name: 'device',
        type: 'tuple',
      },
    ],
    name: 'DeviceCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: 'organisationId', type: 'uint256' },
      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'deviceId', type: 'address' },
      { indexed: false, internalType: 'bytes32', name: 'firmwareHash', type: 'bytes32' },
    ],
    name: 'DeviceFirmwareUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: 'organisationId', type: 'uint256' },
      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'deviceId', type: 'address' },
      { indexed: false, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'DeviceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
    name: 'MetadataUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: 'organisationId', type: 'uint256' },
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'string', name: 'metadata', type: 'string' },
          { internalType: 'bool', name: 'exists', type: 'bool' },
        ],
        indexed: false,
        internalType: 'struct TheRiotProtocolPolygon.Organisation',
        name: 'organisation',
        type: 'tuple',
      },
    ],
    name: 'OrganisationCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint256', name: 'organisationId', type: 'uint256' },
          { internalType: 'address', name: 'deviceId', type: 'address' },
          { internalType: 'bytes32', name: 'firmwareHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceDataHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceGroupIdHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'sessionSalt', type: 'bytes32' },
          { internalType: 'string', name: 'uri', type: 'string' },
        ],
        internalType: 'struct TheRiotProtocolPolygon.CreateDeviceParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'createDevice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: '_firmwareHash', type: 'bytes32' },
      { internalType: 'bytes32', name: '_deviceDataHash', type: 'bytes32' },
      { internalType: 'bytes32', name: '_deviceGroupIdHash', type: 'bytes32' },
      { internalType: 'address', name: '_deviceId', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'generateRiotKeyForDevice',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'generateRiotKeyForSubscriber',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
    name: 'getDevice',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'address', name: 'deviceId', type: 'address' },
          { internalType: 'bytes32', name: 'firmwareHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceDataHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceGroupIdHash', type: 'bytes32' },
          { internalType: 'address', name: 'subscriber', type: 'address' },
          { internalType: 'bytes32', name: 'sessionSalt', type: 'bytes32' },
          { internalType: 'bool', name: 'exists', type: 'bool' },
        ],
        internalType: 'struct TheRiotProtocolPolygon.Device',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDevicesCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32[]', name: 'hashes', type: 'bytes32[]' }],
    name: 'getMerkleRoot',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'organisationId', type: 'uint256' }],
    name: 'getOrganisation',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'string', name: 'metadata', type: 'string' },
          { internalType: 'bool', name: 'exists', type: 'bool' },
        ],
        internalType: 'struct TheRiotProtocolPolygon.Organisation',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'organisationId', type: 'uint256' }],
    name: 'getOrganisationDevices',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'address', name: 'deviceId', type: 'address' },
          { internalType: 'bytes32', name: 'firmwareHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceDataHash', type: 'bytes32' },
          { internalType: 'bytes32', name: 'deviceGroupIdHash', type: 'bytes32' },
          { internalType: 'address', name: 'subscriber', type: 'address' },
          { internalType: 'bytes32', name: 'sessionSalt', type: 'bytes32' },
          { internalType: 'bool', name: 'exists', type: 'bool' },
        ],
        internalType: 'struct TheRiotProtocolPolygon.Device[]',
        name: '_devices',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'user', type: 'address' }],
    name: 'getOrganisations',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'string', name: 'metadata', type: 'string' },
          { internalType: 'bool', name: 'exists', type: 'bool' },
        ],
        internalType: 'struct TheRiotProtocolPolygon.Organisation[]',
        name: '_organisations',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint64', name: 'destGasLimit', type: 'uint64' },
      { internalType: 'uint64', name: 'destGasPrice', type: 'uint64' },
      { internalType: 'uint64', name: 'ackGasLimit', type: 'uint64' },
      { internalType: 'uint64', name: 'ackGasPrice', type: 'uint64' },
      { internalType: 'uint128', name: 'relayerFees', type: 'uint128' },
      { internalType: 'uint8', name: 'ackType', type: 'uint8' },
      { internalType: 'bool', name: 'isReadCall', type: 'bool' },
      { internalType: 'bytes', name: 'asmAddress', type: 'bytes' },
    ],
    name: 'getRequestMetadata',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'requestIdentifier', type: 'uint256' },
      { internalType: 'bool', name: 'execFlag', type: 'bool' },
      { internalType: 'bytes', name: 'execData', type: 'bytes' },
    ],
    name: 'iAck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'requestSender', type: 'string' },
      { internalType: 'bytes', name: 'packet', type: 'bytes' },
      { internalType: 'string', name: 'srcChainId', type: 'string' },
    ],
    name: 'iReceive',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'operator', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'deviceId', type: 'address' }],
    name: 'isDeviceMinted',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'organisationId', type: 'uint256' }],
    name: 'isRiotOrganisation',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: '', type: 'string' }],
    name: 'ourContractOnChains',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: '_name', type: 'string' },
      { internalType: 'string', name: '_symbol', type: 'string' },
      { internalType: 'string', name: '_metadata', type: 'string' },
    ],
    name: 'registerOrganisation',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'operator', type: 'address' },
      { internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'chainId', type: 'string' },
      { internalType: 'string', name: 'contractAddress', type: 'string' },
    ],
    name: 'setContractOnChain',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: 'feePayerAddress', type: 'string' }],
    name: 'setDappMetadata',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'gateway', type: 'address' }],
    name: 'setGateway',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_tokenId', type: 'uint256' },
      { internalType: 'uint256', name: 'organisationId', type: 'uint256' },
      { internalType: 'address', name: '_subscriber', type: 'address' },
      { internalType: 'bytes32', name: 'newSessionSalt', type: 'bytes32' },
    ],
    name: 'setSubscriberAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'destChainId', type: 'string' },
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'address', name: 'caller', type: 'address' },
          { internalType: 'bytes32', name: 'riotKey', type: 'bytes32' },
        ],
        internalType: 'struct TheRiotProtocolPolygon.TransferReceiveRiotKeyParams',
        name: '',
        type: 'tuple',
      },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    name: 'transferCrossChain',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: '_firmwareHash', type: 'bytes32' },
      { internalType: 'uint256', name: '_tokenId', type: 'uint256' },
      { internalType: 'uint256', name: 'organisationId', type: 'uint256' },
      { internalType: 'bytes32', name: 'sessionSalt', type: 'bytes32' },
    ],
    name: 'updateFirmware',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];
const deployments: any = {
  421613: '0xf04a238705B726Bcb1eeC39d8B7529944376C6c3',
  5: '0x9286D0225A60d02A1589982f1e2a453c65B67819',
  534353: '0x618Aa0e9ADa7eee7F665f9e407e7733F94f727dF',
  43113: '0x769B092250D57fa70d8553057B24efF846CCc2b2',
  5001: '0x769B092250D57fa70d8553057B24efF846CCc2b2',
  84531: '0xf04a238705B726Bcb1eeC39d8B7529944376C6c3',
};
const generalABI = [
  {
    inputs: [
      { internalType: 'address', name: 'gatewayAddress', type: 'address' },
      { internalType: 'string', name: 'feePayerAddress', type: 'string' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'getLatestRiotKey',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint64', name: 'destGasLimit', type: 'uint64' },
      { internalType: 'uint64', name: 'destGasPrice', type: 'uint64' },
      { internalType: 'uint64', name: 'ackGasLimit', type: 'uint64' },
      { internalType: 'uint64', name: 'ackGasPrice', type: 'uint64' },
      { internalType: 'uint128', name: 'relayerFees', type: 'uint128' },
      { internalType: 'uint8', name: 'ackType', type: 'uint8' },
      { internalType: 'bool', name: 'isReadCall', type: 'bool' },
      { internalType: 'bytes', name: 'asmAddress', type: 'bytes' },
    ],
    name: 'getRequestMetadata',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'bool', name: 'execFlag', type: 'bool' },
      { internalType: 'bytes', name: 'execData', type: 'bytes' },
    ],
    name: 'iAck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: '', type: 'string' },
      { internalType: 'bytes', name: '', type: 'bytes' },
      { internalType: 'string', name: '', type: 'string' },
    ],
    name: 'iReceive',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: '', type: 'string' }],
    name: 'ourContractOnChains',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'chainId', type: 'string' },
      { internalType: 'string', name: 'contractAddress', type: 'string' },
    ],
    name: 'setContractOnChain',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: 'feePayerAddress', type: 'string' }],
    name: 'setDappMetadata',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'gateway', type: 'address' }],
    name: 'setGateway',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'destChainId', type: 'string' },
      {
        components: [
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'address', name: 'caller', type: 'address' },
        ],
        internalType: 'struct TheRiotProtocolGeneral.TransferSendRiotKeyParams',
        name: 'transferParams',
        type: 'tuple',
      },
      { internalType: 'bytes', name: 'requestMetadata', type: 'bytes' },
    ],
    name: 'transferCrossChain',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
];
export { riotDeviceImages, polygonABI, polygonAddress, deployments, generalABI, RIOT_RPC_URL };
